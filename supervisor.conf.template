[program:rbm2mworker]
; Point the command to the specific rqworker command you want to run.
; If you use virtualenv, be sure to point it to
; /path/to/virtualenv/bin/rqworker
; Also, you probably want to include a settings module to configure this
; worker.  For more info on that, see http://python-rq.org/docs/workers/
command=/path/to/project/venv/bin/python /path/to/project/runworker.py
process_name=%(program_name)s

; If you want to run more than one worker instance, increase this
numprocs=2

; This is the directory from which RQ is ran. Be sure to point this to the
; directory where your source code is importable from
directory=/path/to/project

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM

; These are up to you
autostart=true
autorestart=true

environment=RBM2M_LOGIN="",RBM2M_PASSWORD="",SQLALCHEMY_DATABASE_URI="",REDIS_URL=""
